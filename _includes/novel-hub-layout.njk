<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{ title }}</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="manifest" href="/manifest.json">
  <meta name="theme-color" content="#2c3e50">
</head>
<body>
  <header class="main-header">
    <h1><a href="/">PechsNovel</a></h1>
   <nav class="main-nav">
      <div class="nav-group-left">
        <a href="/">Inicio</a>
        <a href="/generos/">Géneros</a>
      </div>
      <div class="nav-group-right">
        <div id="auth-buttons"></div>
        <a href="/admin/" class="nav-publish-btn">Publicar</a>
      </div>
    </nav>
  </header>

  <main class="container">
    <div class="novel-hub-header">
      <div class="novel-hub-cover">
        <img src="{{ cover_image }}" alt="Portada de {{ title }}">
      </div>
      <div class="novel-hub-info">
        <h1>{{ title }}</h1>
        <p><strong>Autor:</strong> {{ author }}</p>
        <p><strong>Géneros:</strong> 
          {% set genreList = genres.split(',') %}
          {% for genre in genreList %}
            <a href="/generos/{{ genre | trim | slugify }}/" class="genre-tag">{{ genre | trim }}</a>
          {% endfor %}
        </p>
        <p><strong>Estado:</strong> {{ status }}</p>
        <div class="novel-hub-actions">
          <button id="add-to-library-btn" class="action-btn primary" style="display: none;">Añadir a la Biblioteca</button>
          
          {% set novelSlug = page.fileSlug %}
          {% set chaptersForThisNovel = collections.chapter | sort(false, false, 'fileSlug') %}
          {% set firstChapter = false %}
          {% for chapter in chaptersForThisNovel %}
              {% if chapter.data.novel == novelSlug %}
                  {% if not firstChapter %}{% set firstChapter = chapter %}{% endif %}
              {% endif %}
          {% endfor %}

          {% if firstChapter %}
              <a href="{{ firstChapter.url }}" class="action-btn">Leer Primer Capítulo</a>
          {% else %}
              <button class="action-btn" disabled>No hay capítulos</button>
          {% endif %}
        </div>
      </div>
    </div>

    <div class="novel-hub-content">
      <h2>Resumen</h2>
      <div>{{ description | safe }}</div>
      <h2>Lista de Capítulos</h2>
      <ul class="chapter-list">
        {% set novelSlug = page.fileSlug %}
        {% set chaptersForThisNovel = collections.chapter | reverse %}
        {% for chapter in chaptersForThisNovel %}
          {% if chapter.data.novel == novelSlug %}
            <li>
              <a href="{{ chapter.url }}">{{ chapter.data.title }}</a>
            </li>
          {% endif %}
        {% endfor %}
      </ul>
    </div>
  </main>

  <script type="text/javascript" src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
  <script src="/auth.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const identity = window.netlifyIdentity;
      const addToLibraryBtn = document.getElementById('add-to-library-btn');
      const novelSlug = '{{ page.fileSlug }}';

      async function updateLibraryButtonStatus() {
        const user = identity.currentUser();
        if (!user || !addToLibraryBtn) {
          if(addToLibraryBtn) addToLibraryBtn.style.display = 'none';
          return;
        }
        addToLibraryBtn.style.display = 'inline-block';

        try {
          const response = await fetch('/.netlify/functions/checkLibraryStatus', {
            method: 'POST',
            body: JSON.stringify({ user_id: user.id, novel_slug: novelSlug })
          });
          const data = await response.json();

          if (data.isInLibrary) {
            addToLibraryBtn.innerText = 'En tu Biblioteca';
            addToLibraryBtn.disabled = true;
          } else {
            addToLibraryBtn.innerText = 'Añadir a la Biblioteca';
            addToLibraryBtn.disabled = false;
          }
        } catch (error) {
          console.error('Error al verificar biblioteca:', error);
          addToLibraryBtn.innerText = 'Error al verificar';
          addToLibraryBtn.disabled = true;
        }
      }

      identity.on('login', updateLibraryButtonStatus);
      identity.on('logout', () => {
        if(addToLibraryBtn) {
            addToLibraryBtn.style.display = 'none';
        }
      });
      identity.on('init', updateLibraryButtonStatus);

      if (addToLibraryBtn) {
        addToLibraryBtn.addEventListener('click', async function() {
          const user = identity.currentUser();
          if (!user || addToLibraryBtn.disabled) return;

          addToLibraryBtn.innerText = 'Guardando...';
          addToLibraryBtn.disabled = true;

          try {
            const response = await fetch('/.netlify/functions/addToLibrary', {
              method: 'POST',
              body: JSON.stringify({ user_id: user.id, novel_slug: novelSlug })
            });
            const data = await response.json();

            if (data.error) {
              alert('Error: ' + data.error);
              updateLibraryButtonStatus(); // Revertir si hay error
            } else {
              alert('¡Novela añadida a la biblioteca!');
              addToLibraryBtn.innerText = 'En tu Biblioteca'; // Actualiza inmediatamente
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Hubo un error al conectar con el servidor.');
            updateLibraryButtonStatus(); // Revertir si hay error
          }
        });
      }
    });
  </script>
</body>
</html>
